for (i in 1 : 1000) mns1 = c(mns1, mean(runif(40)))
mns1 = NULL
for (i in 1 : 1000) mns1 = c(mns1, mean(runif(40)))
mns1
replicate(1000, mns1 = c(mns1, mean(runif(40))))
replicate(1000, mns1 <- c(mns1, mean(runif(40))))
length(mns1)
replicate(1, mns1 <- c(mns1, mean(runif(40))))
mns1 = NULL
replicate(1, mns1 <- c(mns1, mean(runif(40))))
replicate(2, mns1 <- c(mns1, mean(runif(40))))
replicate(20, mns1 <- c(mns1, mean(runif(40))))
ymc <- replicate(5,h0 + v0 *tt - 0.5* g*tt^2 + rnorm(n,sd=1))
g = 9.8 ## meters per second
h0 = 56.67
v0 = 0
n = 25
tt = seq(0,3.4,len=n) ##time in secs, t is a base function
y = h0 + v0 *tt - 0.5* g*tt^2 + rnorm(n,sd=1)
ymc <- replicate(5,h0 + v0 *tt - 0.5* g*tt^2 + rnorm(n,sd=1))
ymc
ymc <- replicate(5,h0 + v0 *tt - 0.5* g*tt^2 + rnorm(n,sd=1))
t
tt
model <- lm(y~tt+tt2,data=X)
x
y
g = 9.8 ## meters per second
h0 = 56.67
v0 = 0
n = 25
tt = seq(0,3.4,len=n) ##time in secs, t is a base function
y = h0 + v0 *tt - 0.5* g*tt^2 + rnorm(n,sd=1)
X = cbind(1,tt,tt^2)
A = solve(crossprod(X))%*%t(X)
g = 9.8 ## meters per second
h0 = 56.67
v0 = 0
n = 25
tt = seq(0,3.4,len=n) ##time in secs, t is a base function
y = h0 + v0 *tt - 0.5* g*tt^2 + rnorm(n,sd=1)
X = cbind(1,tt,tt^2)
A = solve(crossprod(X))%*%t(X)
-2 * (A %*% y) [3]
A[3,3]
A
dim(A)
(A %*% y)
-2*(A %*% y)
-2*(A %*% y)[,1]
-2*(A %*% y)[1]
-2*(A %*% y)[2]
-2*(A %*% y)[3]
g = 9.8 ## meters per second
h0 = 56.67
v0 = 0
n = 25
tt = seq(0,3.4,len=n) ##time in secs, t is a base function
y = h0 + v0 *tt - 0.5* g*tt^2 + rnorm(n,sd=1)
X = cbind(1,tt,tt^2)
A = solve(crossprod(X))%*%t(X)
-2*(A %*% y)[3]
g = 9.8 ## meters per second
h0 = 56.67
v0 = 0
n = 25
tt = seq(0,3.4,len=n) ##time in secs, t is a base function
y = h0 + v0 *tt - 0.5* g*tt^2 + rnorm(n,sd=1)
X = cbind(1,tt,tt^2)
A = solve(crossprod(X))%*%t(X)
-2*(A %*% y)[3]
g = 9.8 ## meters per second
h0 = 56.67
v0 = 0
n = 25
tt = seq(0,3.4,len=n) ##time in secs, t is a base function
y = h0 + v0 *tt - 0.5* g*tt^2 + rnorm(n,sd=1)
X = cbind(1,tt,tt^2)
A = solve(crossprod(X))%*%t(X)
-2*(A %*% y)[3]
g<-9.8 ## meters per second
h0<-56.67
v0<-0
n<-25
tt<-seq(0,3.4,len=n) ##time in secs, t is a base function
y<- h0 + v0 *tt - 0.5* g*tt^2 + rnorm(n,sd=1)
X<-cbind(1,tt,tt^2)
A<-solve(crossprod(X))%*%t(X)
-2*(A %*% y)[3]
-2*(A %*% y)[3]
-2*(A %*% y)[2]
-2*(A %*% y)[1]
dims( -2*(A %*% y))
dim( -2*(A %*% y))
-2*(A %*% y)
g<-9.8 ## meters per second
h0<-56.67
v0<-0
n<-25
tt<-seq(0,3.4,len=n) ##time in secs, t is a base function
y<- h0 + v0 *tt - 0.5* g*tt^2 + rnorm(n,sd=1)
X<-cbind(1,tt,tt^2)
A<-solve(crossprod(X))%*%t(X)
-2*(A %*% y)
g<-9.8 ## meters per second
h0<-56.67
v0<-0
n<-25
tt<-seq(0,3.4,len=n) ##time in secs, t is a base function
y<- h0 + v0 *tt - 0.5* g*tt^2 + rnorm(n,sd=1)
X<-cbind(1,tt,tt^2)
A<-solve(crossprod(X))%*%t(X)
-2*(A %*% y)
g<-9.8 ## meters per second
h0<-56.67
v0<-0
n<-25
tt<-seq(0,3.4,len=n) ##time in secs, t is a base function
y<- h0 + v0 *tt - 0.5* g*tt^2 + rnorm(n,sd=1)
X<-cbind(1,tt,tt^2)
A<-solve(crossprod(X))%*%t(X)
-2*(A %*% y)
g<-9.8 ## meters per second
h0<-56.67
v0<-0
n<-25
tt<-seq(0,3.4,len=n) ##time in secs, t is a base function
y<- h0 + v0 *tt - 0.5* g*tt^2 + rnorm(n,sd=1)
X<-cbind(1,tt,tt^2)
A<-solve(crossprod(X))%*%t(X)
-2*(A %*% y)
g<-9.8 ## meters per second
h0<-56.67
v0<-0
n<-25
tt<-seq(0,3.4,len=n) ##time in secs, t is a base function
y<- h0 + v0 *tt - 0.5* g*tt^2 + rnorm(n,sd=1)
X<-cbind(1,tt,tt^2)
A<-solve(crossprod(X))%*%t(X)
-2*(A %*% y)
g<-9.8 ## meters per second
h0<-56.67
v0<-0
n<-25
tt<-seq(0,3.4,len=n) ##time in secs, t is a base function
y<- h0 + v0 *tt - 0.5* g*tt^2 + rnorm(n,sd=1)
X<-cbind(1,tt,tt^2)
A<-solve(crossprod(X))%*%t(X)
gCal <- -2*(A %*% y)
gCal
g<-9.8 ## meters per second
h0<-56.67
v0<-0
n<-25
tt<-seq(0,3.4,len=n) ##time in secs, t is a base function
y<- h0 + v0 *tt - 0.5* g*tt^2 + rnorm(n,sd=1)
X<-cbind(1,tt,tt^2)
A<-solve(crossprod(X))%*%t(X)
gCal <- -2*(A %*% y)
gCal
g<-9.8 ## meters per second
h0<-56.67
v0<-0
n<-25
tt<-seq(0,3.4,len=n) ##time in secs, t is a base function
y<- h0 + v0 *tt - 0.5* g*tt^2 + rnorm(n,sd=1)
X<-cbind(1,tt,tt^2)
A<-solve(crossprod(X))%*%t(X)
gCal <- -2*(A %*% y)
gCal
g<-9.8 ## meters per second
h0<-56.67
v0<-0
n<-25
tt<-seq(0,3.4,len=n) ##time in secs, t is a base function
y<- h0 + v0 *tt - 0.5* g*tt^2 + rnorm(n,sd=1)
X<-cbind(1,tt,tt^2)
A<-solve(crossprod(X))%*%t(X)
gCal <- -2*(A %*% y)
gCal
g<-9.8 ## meters per second
h0<-56.67
v0<-0
n<-25
tt<-seq(0,3.4,len=n) ##time in secs, t is a base function
y<- h0 + v0 *tt - 0.5* g*tt^2 + rnorm(n,sd=1)
X<-cbind(1,tt,tt^2)
A<-solve(crossprod(X))%*%t(X)
gCal <- -2*(A %*% y)
gCal
g<-9.8 ## meters per second
h0<-56.67
v0<-0
n<-25
tt<-seq(0,3.4,len=n) ##time in secs, t is a base function
y<- h0 + v0 *tt - 0.5* g*tt^2 + rnorm(n,sd=1)
X<-cbind(1,tt,tt^2)
A<-solve(crossprod(X))%*%t(X)
gCal <- -2*(A %*% y)
gCal
g<-9.8 ## meters per second
h0<-56.67
v0<-0
n<-25
tt<-seq(0,3.4,len=n) ##time in secs, t is a base function
y<- h0 + v0 *tt - 0.5* g*tt^2 + rnorm(n,sd=1)
X<-cbind(1,tt,tt^2)
A<-solve(crossprod(X))%*%t(X)
gCal <- -2*(A %*% y)
gCal
gMCSims <- function() {
g<-9.8 ## meters per second
h0<-56.67
v0<-0
n<-25
tt<-seq(0,3.4,len=n) ##time in secs, t is a base function
y<- h0 + v0 *tt - 0.5* g*tt^2 + rnorm(n,sd=1)
X<-cbind(1,tt,tt^2)
A<-solve(crossprod(X))%*%t(X)
gCal <- -2*(A %*% y)
}
gMCSims()
gCal
gMCSims()
gCal
gMCSims <- function() {
g<-9.8 ## meters per second
h0<-56.67
v0<-0
n<-25
tt<-seq(0,3.4,len=n) ##time in secs, t is a base function
y<- h0 + v0 *tt - 0.5* g*tt^2 + rnorm(n,sd=1)
X<-cbind(1,tt,tt^2)
A<-solve(crossprod(X))%*%t(X)
gCal <- -2*(A %*% y)
gCal
}
gMCSims()
gCal
gMCSims()
gMCSims()
gMCSims()
gMCSims()
gMCSims()
gMCSims()
gMC <- NULL
gMC <- replicate(20,gMCSims() )
gMC
str(gHC)
str(gMC)
gMC <- NULL
gMC <- replicate(20,c(gMC,gMCSims()) )
gMC
gMC <- NULL
gMC <- replicate(1e5,c(gMC,gMCSims()) )
sd(gMC[3,])
mean(gMC[3,])
sd(gMC[3,])/sqrt(1e5)
sd(gMC[3,])
source('~/edX/Matrix Algebra and Linear Models/QUESTION_212.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
doIt()
doIt()
doIt()
doIt()
doIt()
str(gMC)
str(gMC)
gMC[4,]
mean(gMC[3,])
source('~/edX/Matrix Algebra and Linear Models/QUESTION_212.R', echo=TRUE)
doIt()
mean(gMC)
mean(gMC[3,])
mean(gMC[3,])
sd(gMC[3,])   # This is the answer
mean(gMC[3,])
sd(gMC[3,])   # This is the answer
doIt()
source('~/edX/Matrix Algebra and Linear Models/QUESTION_212.R', echo=TRUE)
doIt()
library(UsingR)
x = father.son$fheight
y = father.son$sheight
n = length(y)
x
y
n
N = 50
index = sample(n,N)
sampledat = father.son[index,]
x = sampledat$fheight
y = sampledat$sheight
betahat = lm(y~x)$coef
summary(betahat)
summary(lm(y~x))
library(UsingR)
x = father.son$fheight
y = father.son$sheight
n = length(y)
N = 50
index = sample(n,N)
sampledat = father.son[index,]
x = sampledat$fheight
y = sampledat$sheight
betahat = lm(y~x)$coef
source('~/.active-rstudio-document', echo=TRUE)
dohMC()
str(slope)
x = father.son$fheight
y = father.son$sheight
n = length(y)
N = 50
index = sample(n,N)
sampledat = father.son[index,]
x = sampledat$fheight
y = sampledat$sheight
betahat = lm(y~x)$coef
betahat
slope <- NULL
slope <- replicate(1e4,c(slope,heightMC()) )
slope
slope <- NULL
slope <- replicate(4,c(slope,heightMC()) )
slope
slope <- NULL
slope <- replicate(14,c(slope,heightMC()) )
slope
str(slope)
slope$x
slope[,2]
mean(slope[1])
mean(slope[1,])
slope
as.table(slope)
as.data.frame(slope)
mean(slope[2,])
source('~/.active-rstudio-document', echo=TRUE)
dohMC()
str(slope)
str(dohMC::slope)
str(dohMC:slope)
mean( (Y - mean(Y))*(X-mean(X) ) )
x = father.son$fheight
y = father.son$sheight
n = length(y)
x
y
Y <- y
X <- x
mean( (Y - mean(Y))*(X-mean(X) ) )
mean( (Y - mean(Y))*(X-mean(X) ) )round())
round(mean( (Y - mean(Y))*(X-mean(X) ) )round()))
round(mean( (Y - mean(Y))*(X-mean(X) ) ))
source('~/edX/Matrix Algebra and Linear Models/QUESTION_212.R', echo=TRUE)
y = h0 + v0*tt  - 0.5*g*tt^2 + rnorm(n,sd=1)
g<-9.8 ## meters per second
h0<-56.67
v0<-0
n<-25
tt<-seq(0,3.4,len=n) ##time in secs, t is a base function
y<- h0 + v0 *tt - 0.5* g*tt^2 + rnorm(n,sd=1)
X<-cbind(1,tt,tt^2)
A<-solve(crossprod(X))%*%t(X)
gCal <- -2*(A %*% y)
gCal
y = h0 + v0*tt  - 0.5*g*tt^2 + rnorm(n,sd=1)
y
var(y)
x =  father.son$fheight
beta =  c(34,0.5)
var(beta[1]+beta[2]*x)
x = father.son$fheight
y = father.son$sheight
n = length(y)
N = 50
set.seed(1)
index = sample(n,N)
sampledat = father.son[index,]
x = sampledat$fheight
y = sampledat$sheight
betahat = lm(y~x)$coef
summary(betahat)
lm(y~x)
betahat
betahat = lm(y~x)$coef
betahat
rnorm(n=10,x=0,sd=1)
rnorm(n=10,mean=0,sd=1)
mean(rnorm(n=10,mean=0,sd=1))
mean(rnorm(n=10,mean=0,sd=1))
mean(rnorm(n=10,mean=0,sd=1))
mean(rnorm(n=10,mean=0,sd=1))
mean(rnorm(n=10,mean=0,sd=1))
mean(rnorm(n=10,mean=0,sd=1))
mean(rnorm(n=100,mean=0,sd=1))
mean(rnorm(n=100,mean=0,sd=1))
mean(rnorm(n=100,mean=0,sd=1))
mean(rnorm(n=100,mean=0,sd=1))
mean(rnorm(n=100,mean=0,sd=1))
mean(rnorm(n=100,mean=0,sd=1))
mean(rnorm(n=100,mean=0,sd=1))
mean(rnorm(n=1000,mean=0,sd=1))
mean(rnorm(n=1000,mean=0,sd=1))
mean(rnorm(n=1000,mean=0,sd=1))
mean(rnorm(n=1000,mean=0,sd=1))
mean(rnorm(n=1000,mean=0,sd=1))
mean(rnorm(n=1000,mean=0,sd=1))
devtools::install_github('rafalib','ririzarr')
library(rafalib)
install.packages(c("lattice", "lessR", "manipulate", "multcomp", "Rcmdr"))
install.packages("rafalib")
library("rafalib", lib.loc="~/R/win-library/3.1")
source('~/.active-rstudio-document', echo=TRUE)
library(rafalib)
mypar2(1,2)
hist(betahat)
qqnorm(betahat)
round(mean(betahat),1)
round(mean(betahat),1)
sd(betahat)
fit = lm(y ~ x)
fit$fitted.values
str(fit)
fit$residuals
sum(fit$residuals^2)
X
X = cbind(rep(1,N), x)
X
pp<-solve(t(X)*X)
t(X)*X
t(X)
pp<-solve(t(X))
t(X)*X
t(X)
t(X)*X
X = cbind(rep(1,N), x)
t(X)*X
X
t(X)
pp<-solve(t(X))
pp<-t(X)
solve(pp)
pp
x
x <- sampledat$fheight
y <- sampledat$sheight
X <- model.matrix(~x)
X
pp<-solve(t(X))
XtXinv <- solve(crossprod(X))
X = cbind(rep(1,N), x)
X
?transpose
?t
